# Requests to WordPress are made in /wordpress/, which is at the same
# level as /wp-content/. To properly handle these, we provide an alias
# to move up a directory and find static files.
location ~ ^/wp-content/(mu-plugins|plugins|themes)/(.*)$ {
    expires 7d;
    alias /var/www/wp-content/$1/$2;
}

location ~ "^/wp-content/uploads/(.*)$" {
        expires 7d;
        alias /var/www/wp-content/;
        try_files $uri @missing;
}

location @missing {
        rewrite "^/wp-content/uploads/(.*)$" "https://wsuwp-uploads.s3.amazonaws.com/uploads/$1" redirect;
        rewrite "^/[_0-9a-zA-Z-]/wp-content/uploads/(.*)$" "https://wsuwp-uploads.s3.amazonaws.com/uploads/$1" redirect;
}

# Match any requests created by the WP Document Revisions plugin, which
# masks a full download URL with a URL processed by WordPress behind
# existing authentication.
location ~ ^/([_0-9a-zA-Z-]+/)?documents/(.*)$ {
    index index.php;
    try_files $uri /index.php$is_args$args;
}

# Handle all static assets by serving the file directly. Add directives
# to send expires headers and turn off 404 error logging.
location ~* \.(js|css|png|jpg|jpeg|gif|ico|xls|doc|zip|exe|mp3|mp4|pdf|ai|psd|eps|ppt|dmg|csv|key|numbers|pages)$ {
	{% if 'remote' == salt['pillar.get']('network:location', 'local') %}
	expires 7d;
	{% else %}
	expires off;
	{% endif %}

    log_not_found off;
}
